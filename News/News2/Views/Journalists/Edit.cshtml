@Scripts.Render("~/Scripts/myScript_datepicker.js")

@model News2.Models.Journalist

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="bg-faded p-4 my-4">
    <h2>Edit Jounalist</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.JourID)

            <div class="form-group">
              @Html.Label("Office Name")            
           <div class="col-md-10">
                    @Html.EditorFor(model => model.officeName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.officeName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Jounalist First Name")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.jourFName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.jourFName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Jounalist Last Name")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.jourLName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.jourLName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Date-of-Birth")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.jourDob, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.jourDob, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.phone, new { size = 20 })
                    @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Office Street")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.officeStreet, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.officeStreet, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Office Suburb")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.officeSuburb, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.officeSuburb, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Office State")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.officeState, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.officeState, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-outline-dark" />
                    <input type="reset" value="Cancel" class="btn btn-outline-dark" />
                    <button class="btn btn-outline-dark" onclick="location.href='@Url.Action("Index", "Journalists")';
                   return false;">
                        Back to List
                    </button>

                </div>
            </div>
        </div>
    }

</div>
